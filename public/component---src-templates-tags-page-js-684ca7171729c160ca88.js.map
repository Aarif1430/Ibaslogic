{"version":3,"sources":["webpack:///./src/templates/tags-page.js"],"names":["Tags","_ref","pageContext","data","tag","_data$allMdx","allMdx","edges","totalCount","tagHeader","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","className","blogStyles","main","role","container","filterPosts","list","map","_ref2","node","id","timeToRead","_components_post__WEBPACK_IMPORTED_MODULE_3__","key","frontmatter","posted","fields","slug","birthTime","updated","modifiedTime","time","fluid","featured","childImageSharp","name","pageQuery"],"mappings":"kNA4CeA,UArCF,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,KACnBC,EAAQF,EAARE,IAD8BC,EAERF,EAAKG,OAA3BC,EAF8BF,EAE9BE,MAAOC,EAFuBH,EAEvBG,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEJ,EAFF,IAIf,OACEM,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,MAAK,wBAA0BX,EAA1B,MACVM,EAAAC,EAAAC,cAAA,QAAMI,UAAWC,IAAWC,KAAMC,KAAK,QACrCT,EAAAC,EAAAC,cAAA,OAAKI,UAAWC,IAAWG,WACzBV,EAAAC,EAAAC,cAAA,OAAKI,UAAWC,IAAWI,aACzBX,EAAAC,EAAAC,cAAA,SAAIH,IAENC,EAAAC,EAAAC,cAAA,MAAII,UAAWC,IAAWK,MACvBf,EAAMgB,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACJC,EAAmBD,EAAnBC,GAAIC,EAAeF,EAAfE,WACZ,OACEjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACEC,IAAKH,EACLX,MAAOU,EAAKK,YAAYf,MACxBgB,OAAQN,EAAKO,OAAOC,KAAKC,UACzBC,QAASV,EAAKO,OAAOC,KAAKG,aAC1BC,KAAMV,EACNW,MAAOb,EAAKK,YAAYS,SAASC,gBAAgBF,MACjDL,KAAMR,EAAKO,OAAOC,KAAKQ,cAalC,IAAMC,EAAS","file":"component---src-templates-tags-page-js-684ca7171729c160ca88.js","sourcesContent":["import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport Post from \"../components/post\"\r\nimport SEO from \"../components/seo\"\r\nimport blogStyles from \"../components/BlogPage/blogItems.module.scss\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext\r\n  const { edges, totalCount } = data.allMdx\r\n  const tagHeader = `${totalCount} post${\r\n    totalCount === 1 ? \"\" : \"s\"\r\n  } tagged with \"${tag}\"`\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={`All posts tagged as \"${tag}\"`} />\r\n      <main className={blogStyles.main} role=\"main\">\r\n        <div className={blogStyles.container}>\r\n          <div className={blogStyles.filterPosts}>\r\n            <p>{tagHeader}</p>\r\n          </div>\r\n          <ul className={blogStyles.list}>\r\n            {edges.map(({ node }) => {\r\n              const { id, timeToRead } = node\r\n              return (\r\n                <Post\r\n                  key={id}\r\n                  title={node.frontmatter.title}\r\n                  posted={node.fields.slug.birthTime}\r\n                  updated={node.fields.slug.modifiedTime}\r\n                  time={timeToRead}\r\n                  fluid={node.frontmatter.featured.childImageSharp.fluid}\r\n                  slug={node.fields.slug.name}\r\n                />\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </main>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String!) {\r\n    allMdx(\r\n      sort: { fields: [fields___slug___modifiedTime], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            tags\r\n            featured {\r\n              childImageSharp {\r\n                fluid(maxWidth: 600) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug {\r\n              name\r\n              modifiedTime(formatString: \"MMMM Do, YYYY\")\r\n              birthTime(formatString: \"MMMM Do, YYYY\")\r\n            }\r\n          }\r\n          timeToRead\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}